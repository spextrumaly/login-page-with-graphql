{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tanapon/graphql-test/login-page-with-graphql/pages/_app.js\";\nimport App, { Container } from 'next/app';\nimport React from 'react';\nimport { ApolloProvider } from 'react-apollo';\nimport withData from '../lib/withData';\n\nvar MyApp =\n/*#__PURE__*/\nfunction (_App) {\n  _inherits(MyApp, _App);\n\n  function MyApp() {\n    _classCallCheck(this, MyApp);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MyApp).apply(this, arguments));\n  }\n\n  _createClass(MyApp, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps,\n          apolloClient = _this$props.apolloClient;\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }, React.createElement(ApolloProvider, {\n        client: apolloClient,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, React.createElement(Component, _extends({}, pageProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      })), \"d\"));\n    }\n  }]);\n\n  return MyApp;\n}(App);\n\nexport default withData(MyApp);","map":{"version":3,"sources":["/Users/tanapon/graphql-test/login-page-with-graphql/pages/_app.js"],"names":["App","Container","React","ApolloProvider","withData","MyApp","props","Component","pageProps","apolloClient"],"mappings":";;;;;;;AAAA,OAAOA,GAAP,IAAcC,SAAd,QAA+B,UAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,OAAOC,QAAP,MAAqB,iBAArB;;IAEMC,K;;;;;;;;;;;;;6BACM;AAAA,wBACuC,KAAKC,KAD5C;AAAA,UACAC,SADA,eACAA,SADA;AAAA,UACWC,SADX,eACWA,SADX;AAAA,UACsBC,YADtB,eACsBA,YADtB;AAER,aACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,cAAD;AAAgB,QAAA,MAAM,EAAEA,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD,eAAeD,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,MADF,CADF;AAOD;;;;EAViBR,G;;AAapB,eAAeI,QAAQ,CAACC,KAAD,CAAvB","sourcesContent":["import App, { Container } from 'next/app'\nimport React from 'react'\nimport { ApolloProvider } from 'react-apollo'\nimport withData from '../lib/withData'\n\nclass MyApp extends App {\n  render () {\n    const { Component, pageProps, apolloClient } = this.props\n    return (\n      <Container>\n        <ApolloProvider client={apolloClient}>\n          <Component {...pageProps} />d\n        </ApolloProvider>\n      </Container>\n    )\n  }\n}\n\nexport default withData(MyApp)\n"]},"metadata":{},"sourceType":"module"}