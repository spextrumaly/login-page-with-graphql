{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/tanapon/graphql-test/login-page-with-graphql/components/PostList.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query {\\n    posts {\\n      id\\n      title\\n      createdAt\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nexport var allPostsQuery = gql(_templateObject());\nexport default function PostList() {\n  return React.createElement(Query, {\n    query: allPostsQuery,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, function (_ref) {\n    var loading = _ref.loading;\n    if (loading) return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"Loading\");\n    return React.createElement(\"section\", {\n      className: \"jsx-3530367944\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"jsx-3530367944\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }), React.createElement(_JSXStyle, {\n      id: \"3530367944\",\n      __self: this\n    }, \"section.jsx-3530367944{padding-bottom:20px;}li.jsx-3530367944{display:block;margin-bottom:10px;}div.jsx-3530367944{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}a.jsx-3530367944{font-size:14px;margin-right:10px;-webkit-text-decoration:none;text-decoration:none;padding-bottom:0;border:0;}span.jsx-3530367944{font-size:14px;margin-right:5px;}ul.jsx-3530367944{margin:0;padding:0;}button.jsx-3530367944:before{-webkit-align-self:center;-ms-flex-item-align:center;align-self:center;border-style:solid;border-width:6px 4px 0 4px;border-color:#ffffff transparent transparent transparent;content:'';height:0;margin-right:5px;width:0;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy90YW5hcG9uL2dyYXBocWwtdGVzdC9sb2dpbi1wYWdlLXdpdGgtZ3JhcGhxbC9jb21wb25lbnRzL1Bvc3RMaXN0LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXdCd0IsQUFHcUMsQUFHTixBQUlLLEFBSUosQUFPQSxBQUlOLEFBSVMsU0FIUixLQW5CUyxDQVFELEFBT0QsSUFLbkIsQ0F2QkEsWUFtQkEsQ0FmQSxBQVF1QixzQ0FjRixZQWJGLE9BY1UsR0FwQmQsT0FPSixTQUNYLFFBYTJELGtEQXBCM0QsT0FxQmEsV0FDRixTQUNRLGlCQUNULFFBQ1YiLCJmaWxlIjoiL1VzZXJzL3RhbmFwb24vZ3JhcGhxbC10ZXN0L2xvZ2luLXBhZ2Utd2l0aC1ncmFwaHFsL2NvbXBvbmVudHMvUG9zdExpc3QuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBRdWVyeSB9IGZyb20gJ3JlYWN0LWFwb2xsbydcbmltcG9ydCBncWwgZnJvbSAnZ3JhcGhxbC10YWcnXG5cblxuZXhwb3J0IGNvbnN0IGFsbFBvc3RzUXVlcnkgPSBncWxgXG4gIHF1ZXJ5IHtcbiAgICBwb3N0cyB7XG4gICAgICBpZFxuICAgICAgdGl0bGVcbiAgICAgIGNyZWF0ZWRBdFxuICAgIH1cbiAgfVxuYFxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gUG9zdExpc3QgKCkge1xuICByZXR1cm4gKFxuICAgIDxRdWVyeSBxdWVyeT17YWxsUG9zdHNRdWVyeX0+XG4gICAgICB7KHsgbG9hZGluZyB9KSA9PiB7ICAgICAgICBcbiAgICAgICAgaWYgKGxvYWRpbmcpIHJldHVybiA8ZGl2PkxvYWRpbmc8L2Rpdj5cblxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgIDxzZWN0aW9uPlxuICAgICAgICAgICAgPHVsPlxuICAgICAgICAgICAgICB7LyogeyBQb3N0IH0gKi99XG4gICAgICAgICAgICA8L3VsPlxuICAgICAgICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICAgICAgICBzZWN0aW9uIHtcbiAgICAgICAgICAgICAgICBwYWRkaW5nLWJvdHRvbTogMjBweDtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBsaSB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMTBweDtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBkaXYge1xuICAgICAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBhIHtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xuICAgICAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgICAgICAgICAgICBwYWRkaW5nLWJvdHRvbTogMDtcbiAgICAgICAgICAgICAgICBib3JkZXI6IDA7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgc3BhbiB7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogNXB4O1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIHVsIHtcbiAgICAgICAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgICAgICAgICAgcGFkZGluZzogMDtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBidXR0b246YmVmb3JlIHtcbiAgICAgICAgICAgICAgICBhbGlnbi1zZWxmOiBjZW50ZXI7XG4gICAgICAgICAgICAgICAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcbiAgICAgICAgICAgICAgICBib3JkZXItd2lkdGg6IDZweCA0cHggMCA0cHg7XG4gICAgICAgICAgICAgICAgYm9yZGVyLWNvbG9yOiAjZmZmZmZmIHRyYW5zcGFyZW50IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50O1xuICAgICAgICAgICAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgICAgICAgICAgIGhlaWdodDogMDtcbiAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDVweDtcbiAgICAgICAgICAgICAgICB3aWR0aDogMDtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgYH08L3N0eWxlPlxuICAgICAgICAgIDwvc2VjdGlvbj5cbiAgICAgICAgKVxuICAgICAgfX1cbiAgICA8L1F1ZXJ5PlxuICApXG59XG4iXX0= */\\n/*@ sourceURL=/Users/tanapon/graphql-test/login-page-with-graphql/components/PostList.js */\"));\n  });\n}","map":{"version":3,"sources":["/Users/tanapon/graphql-test/login-page-with-graphql/components/PostList.js"],"names":["Query","gql","allPostsQuery","PostList","loading"],"mappings":";;;;;;;;;;;;;;;AAAA,SAASA,KAAT,QAAsB,cAAtB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAGA,OAAO,IAAMC,aAAa,GAAGD,GAAH,mBAAnB;AASP,eAAe,SAASE,QAAT,GAAqB;AAClC,SACE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAED,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,gBAAiB;AAAA,QAAdE,OAAc,QAAdA,OAAc;AAChB,QAAIA,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AAEb,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAAA;AAAA;AAAA,mlHADF;AA6CD,GAjDH,CADF;AAqDD","sourcesContent":["import { Query } from 'react-apollo'\nimport gql from 'graphql-tag'\n\n\nexport const allPostsQuery = gql`\n  query {\n    posts {\n      id\n      title\n      createdAt\n    }\n  }\n`\nexport default function PostList () {\n  return (\n    <Query query={allPostsQuery}>\n      {({ loading }) => {        \n        if (loading) return <div>Loading</div>\n\n        return (\n          <section>\n            <ul>\n              {/* { Post } */}\n            </ul>\n            <style jsx>{`\n              section {\n                padding-bottom: 20px;\n              }\n              li {\n                display: block;\n                margin-bottom: 10px;\n              }\n              div {\n                align-items: center;\n                display: flex;\n              }\n              a {\n                font-size: 14px;\n                margin-right: 10px;\n                text-decoration: none;\n                padding-bottom: 0;\n                border: 0;\n              }\n              span {\n                font-size: 14px;\n                margin-right: 5px;\n              }\n              ul {\n                margin: 0;\n                padding: 0;\n              }\n              button:before {\n                align-self: center;\n                border-style: solid;\n                border-width: 6px 4px 0 4px;\n                border-color: #ffffff transparent transparent transparent;\n                content: '';\n                height: 0;\n                margin-right: 5px;\n                width: 0;\n              }\n            `}</style>\n          </section>\n        )\n      }}\n    </Query>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}